{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      workouts: null,\n      email: null,\n      password: null,\n      error: null,\n      user: null\n    };\n  },\n  mutations: {\n    useLogin(state) {\n      axios.post('http://localhost:3000/api/login', {\n        email: state.email,\n        password: state.password\n      }).then(res => {\n        state.isError = false;\n        state.delresult = true;\n        localStorage.setItem('user', JSON.stringify(res));\n        state.user = res.data;\n        state.results = true;\n      }).catch(err => {\n        state.isError = true;\n        state.results = false;\n        store.state.delresult = false;\n        state.error = err.response.data.msg;\n        console.log(err);\n      });\n    }\n  },\n  actions: {\n    useLogin(context) {\n      context.commit('useLogin');\n    }\n  }\n});\nexport default store;\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGRmMjljMTNjOTlhYmJkZmExNGZjMSIsImlhdCI6MTY3NjEzMTM2OCwiZXhwIjoxNjc2MzkwNTY4fQ.psQltWPNnKtGUgF3-q7jXFVSPyMHLqmpE7NqIUDFPs8","map":{"version":3,"names":["createStore","axios","store","state","workouts","email","password","error","user","mutations","useLogin","post","then","res","isError","delresult","localStorage","setItem","JSON","stringify","data","results","catch","err","response","msg","console","log","actions","context","commit"],"sources":["/home/amirrezatahmasebi/Documents/node-js/front-end/store/store.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n            workouts: null,\n            email: null,\n            password: null,\n            error: null,\n            user: null\n        }\n    },\n    mutations: {\n\n        useLogin(state) {\n            axios.post('http://localhost:3000/api/login', {\n                email: state.email,\n                password: state.password\n            })\n                .then((res) => {\n                    state.isError = false\n                    state.delresult = true\n                    localStorage.setItem('user', JSON.stringify(res))\n                    state.user = res.data\n                    state.results = true\n                })\n                .catch((err) => {\n                    state.isError = true\n                    state.results = false\n                    store.state.delresult = false\n                    state.error = err.response.data.msg\n                    console.log(err)\n                })\n\n        }\n    },\n    actions: {\n        useLogin(context) {\n            context.commit('useLogin')\n        }\n    }\n})\nexport default store;\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGRmMjljMTNjOTlhYmJkZmExNGZjMSIsImlhdCI6MTY3NjEzMTM2OCwiZXhwIjoxNjc2MzkwNTY4fQ.psQltWPNnKtGUgF3-q7jXFVSPyMHLqmpE7NqIUDFPs8"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,GAAG;IACJ,OAAO;MACHC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE;IACV,CAAC;EACL,CAAC;EACDC,SAAS,EAAE;IAEPC,QAAQ,CAACP,KAAK,EAAE;MACZF,KAAK,CAACU,IAAI,CAAC,iCAAiC,EAAE;QAC1CN,KAAK,EAAEF,KAAK,CAACE,KAAK;QAClBC,QAAQ,EAAEH,KAAK,CAACG;MACpB,CAAC,CAAC,CACGM,IAAI,CAAEC,GAAG,IAAK;QACXV,KAAK,CAACW,OAAO,GAAG,KAAK;QACrBX,KAAK,CAACY,SAAS,GAAG,IAAI;QACtBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC,CAAC;QACjDV,KAAK,CAACK,IAAI,GAAGK,GAAG,CAACO,IAAI;QACrBjB,KAAK,CAACkB,OAAO,GAAG,IAAI;MACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACZpB,KAAK,CAACW,OAAO,GAAG,IAAI;QACpBX,KAAK,CAACkB,OAAO,GAAG,KAAK;QACrBnB,KAAK,CAACC,KAAK,CAACY,SAAS,GAAG,KAAK;QAC7BZ,KAAK,CAACI,KAAK,GAAGgB,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAACK,GAAG;QACnCC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;MACpB,CAAC,CAAC;IAEV;EACJ,CAAC;EACDK,OAAO,EAAE;IACLlB,QAAQ,CAACmB,OAAO,EAAE;MACdA,OAAO,CAACC,MAAM,CAAC,UAAU,CAAC;IAC9B;EACJ;AACJ,CAAC,CAAC;AACF,eAAe5B,KAAK;;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}