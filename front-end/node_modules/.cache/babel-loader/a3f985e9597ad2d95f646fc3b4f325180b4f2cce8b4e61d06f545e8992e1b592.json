{"ast":null,"code":"import { createStore } from 'vuex';\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      workouts: null,\n      user: localStorage.getItem('user'),\n      error: null,\n      isError: false,\n      todos: [],\n      updates: null,\n      showinp: false,\n      newtodo: null\n    };\n  },\n  mutations: {\n    todo(state) {\n      if (localStorage.getItem('todo')) {\n        try {\n          state.todos = JSON.parse(localStorage.getItem('todo'));\n        } catch (e) {\n          localStorage.removeItem('todo');\n        }\n      }\n    },\n    addtodo(state) {\n      // ensure they actually typed something\n      if (!state.newtodo) {\n        return;\n      }\n      state.todos.push(state.newtodo);\n      state.newtodo = '';\n      const parsed = JSON.stringify(state.todos);\n      localStorage.setItem('todo', parsed);\n    },\n    updatetodo(state, x) {\n      if (!state.newtodo) {\n        return state.showinp = !state.showinp;\n      }\n      let tasks = Array.from(JSON.parse(localStorage.getItem(\"todo\")));\n      tasks.forEach(task => {\n        if (task.task == state.newtodo) {\n          task.task = state.newtodo;\n        }\n      });\n      localStorage.setItem(\"todo\", JSON.stringify(tasks));\n      // const update = state.todos.splice(x, x, state.newtodo);\n      // const parsed = JSON.stringify(update);\n      // localStorage.setItem('todo', parsed);\n    },\n\n    removetodo(state, x) {\n      state.todos.splice(x, 1);\n      const parsed = JSON.stringify(state.todos);\n      localStorage.setItem('todo', parsed);\n    }\n  },\n  actions: {\n    todo(context) {\n      context.commit('todo');\n    },\n    addtodo(context) {\n      context.commit('addtodo');\n    },\n    removetodo(context) {\n      context.commit('removetodo');\n    },\n    updatetodo(context) {\n      context.commit('updatetodo');\n    }\n  }\n});\nexport default store;\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGRmMjljMTNjOTlhYmJkZmExNGZjMSIsImlhdCI6MTY3NjEzMTM2OCwiZXhwIjoxNjc2MzkwNTY4fQ.psQltWPNnKtGUgF3-q7jXFVSPyMHLqmpE7NqIUDFPs8","map":{"version":3,"names":["createStore","store","state","workouts","user","localStorage","getItem","error","isError","todos","updates","showinp","newtodo","mutations","todo","JSON","parse","e","removeItem","addtodo","push","parsed","stringify","setItem","updatetodo","x","tasks","Array","from","forEach","task","removetodo","splice","actions","context","commit"],"sources":["/home/amirrezatahmasebi/Documents/node-js/front-end/store/store.js"],"sourcesContent":["import { createStore } from 'vuex'\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n            workouts: null,\n            user: localStorage.getItem('user'),\n            error: null,\n            isError: false,\n            todos: [],\n            updates: null,\n            showinp: false,\n            newtodo: null\n        }\n    },\n    mutations: {\n        todo(state) {\n            if (localStorage.getItem('todo')) {\n                try {\n                    state.todos = JSON.parse(localStorage.getItem('todo'));\n                } catch (e) {\n                    localStorage.removeItem('todo');\n                }\n            }\n        },\n        addtodo(state) {\n            // ensure they actually typed something\n            if (!state.newtodo) {\n                return;\n            }\n\n            state.todos.push(state.newtodo);\n            state.newtodo = '';\n            const parsed = JSON.stringify(state.todos);\n            localStorage.setItem('todo', parsed);\n        },\n        updatetodo(state, x) {\n            if (!state.newtodo) {\n                return state.showinp = !state.showinp\n            }\n            let tasks = Array.from(JSON.parse(localStorage.getItem(\"todo\")));\n            tasks.forEach(task => {\n                if (task.task == state.newtodo) {\n                    task.task = state.newtodo;\n                }\n            });\n            localStorage.setItem(\"todo\", JSON.stringify(tasks));\n            // const update = state.todos.splice(x, x, state.newtodo);\n            // const parsed = JSON.stringify(update);\n            // localStorage.setItem('todo', parsed);\n        },\n        removetodo(state, x) {\n            state.todos.splice(x, 1);\n            const parsed = JSON.stringify(state.todos);\n            localStorage.setItem('todo', parsed);\n        }\n    },\n    actions: {\n        todo(context) {\n            context.commit('todo')\n        },\n        addtodo(context) {\n            context.commit('addtodo')\n        },\n        removetodo(context) {\n            context.commit('removetodo')\n        },\n        updatetodo(context) {\n            context.commit('updatetodo')\n        }\n    }\n})\nexport default store;\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGRmMjljMTNjOTlhYmJkZmExNGZjMSIsImlhdCI6MTY3NjEzMTM2OCwiZXhwIjoxNjc2MzkwNTY4fQ.psQltWPNnKtGUgF3-q7jXFVSPyMHLqmpE7NqIUDFPs8"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC;AACA,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACtBE,KAAK,GAAG;IACJ,OAAO;MACHC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAClCC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,SAAS,EAAE;IACPC,IAAI,CAACZ,KAAK,EAAE;MACR,IAAIG,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;QAC9B,IAAI;UACAJ,KAAK,CAACO,KAAK,GAAGM,IAAI,CAACC,KAAK,CAACX,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC,CAAC,OAAOW,CAAC,EAAE;UACRZ,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;QACnC;MACJ;IACJ,CAAC;IACDC,OAAO,CAACjB,KAAK,EAAE;MACX;MACA,IAAI,CAACA,KAAK,CAACU,OAAO,EAAE;QAChB;MACJ;MAEAV,KAAK,CAACO,KAAK,CAACW,IAAI,CAAClB,KAAK,CAACU,OAAO,CAAC;MAC/BV,KAAK,CAACU,OAAO,GAAG,EAAE;MAClB,MAAMS,MAAM,GAAGN,IAAI,CAACO,SAAS,CAACpB,KAAK,CAACO,KAAK,CAAC;MAC1CJ,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEF,MAAM,CAAC;IACxC,CAAC;IACDG,UAAU,CAACtB,KAAK,EAAEuB,CAAC,EAAE;MACjB,IAAI,CAACvB,KAAK,CAACU,OAAO,EAAE;QAChB,OAAOV,KAAK,CAACS,OAAO,GAAG,CAACT,KAAK,CAACS,OAAO;MACzC;MACA,IAAIe,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACb,IAAI,CAACC,KAAK,CAACX,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;MAChEoB,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;QAClB,IAAIA,IAAI,CAACA,IAAI,IAAI5B,KAAK,CAACU,OAAO,EAAE;UAC5BkB,IAAI,CAACA,IAAI,GAAG5B,KAAK,CAACU,OAAO;QAC7B;MACJ,CAAC,CAAC;MACFP,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAER,IAAI,CAACO,SAAS,CAACI,KAAK,CAAC,CAAC;MACnD;MACA;MACA;IACJ,CAAC;;IACDK,UAAU,CAAC7B,KAAK,EAAEuB,CAAC,EAAE;MACjBvB,KAAK,CAACO,KAAK,CAACuB,MAAM,CAACP,CAAC,EAAE,CAAC,CAAC;MACxB,MAAMJ,MAAM,GAAGN,IAAI,CAACO,SAAS,CAACpB,KAAK,CAACO,KAAK,CAAC;MAC1CJ,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEF,MAAM,CAAC;IACxC;EACJ,CAAC;EACDY,OAAO,EAAE;IACLnB,IAAI,CAACoB,OAAO,EAAE;MACVA,OAAO,CAACC,MAAM,CAAC,MAAM,CAAC;IAC1B,CAAC;IACDhB,OAAO,CAACe,OAAO,EAAE;MACbA,OAAO,CAACC,MAAM,CAAC,SAAS,CAAC;IAC7B,CAAC;IACDJ,UAAU,CAACG,OAAO,EAAE;MAChBA,OAAO,CAACC,MAAM,CAAC,YAAY,CAAC;IAChC,CAAC;IACDX,UAAU,CAACU,OAAO,EAAE;MAChBA,OAAO,CAACC,MAAM,CAAC,YAAY,CAAC;IAChC;EACJ;AACJ,CAAC,CAAC;AACF,eAAelC,KAAK;;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}