{"ast":null,"code":"import { createStore } from 'vuex';\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      workouts: null,\n      user: localStorage.getItem('user'),\n      error: null,\n      isError: false,\n      todos: [],\n      updates: null,\n      isComplete: false,\n      showinp: false,\n      newtodo: null\n    };\n  },\n  mutations: {\n    todo(state) {\n      if (localStorage.getItem('todo')) {\n        try {\n          state.todos = JSON.parse(localStorage.getItem('todo'));\n        } catch (e) {\n          localStorage.removeItem('todo');\n        }\n      }\n    },\n    addtodo(state) {\n      // ensure they actually typed something\n      if (!state.newtodo) {\n        return;\n      }\n      const todos = !localStorage.getItem('todo') ? [] : JSON.parse(localStorage.getItem('todo'));\n      const currectTodo = {\n        todo: state.newtodo,\n        isComplete: state.isComplete\n      };\n      todos.push(currectTodo);\n      localStorage.setItem(\"todo\", JSON.stringify(todos));\n      if (localStorage.getItem('todo')) {\n        try {\n          state.todos = JSON.parse(localStorage.getItem('todo'));\n        } catch (e) {\n          localStorage.removeItem('todo');\n        }\n      }\n      state.newtodo = '';\n    },\n    updatetodo(state, x) {\n      if (!state.newtodo) {\n        return state.showinp = !state.showinp;\n      }\n      let tasks = JSON.parse(localStorage.getItem(\"todo\"));\n      // tasks.forEach((task, n) => {\n      // if (task.todo == state.todos) {\n      // }\n      console.log(tasks);\n      const parsed = JSON.stringify(tasks);\n      localStorage.setItem('todo', parsed);\n      // })\n    },\n\n    removetodo(state, x) {\n      state.todos.splice(x, 1);\n      const parsed = JSON.stringify(state.todos);\n      localStorage.setItem('todo', parsed);\n    }\n  },\n  actions: {\n    todo(context) {\n      context.commit('todo');\n    },\n    addtodo(context) {\n      context.commit('addtodo');\n    },\n    removetodo(context) {\n      context.commit('removetodo');\n    },\n    updatetodo(context) {\n      context.commit('updatetodo');\n    }\n  }\n});\nexport default store;\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGRmMjljMTNjOTlhYmJkZmExNGZjMSIsImlhdCI6MTY3NjEzMTM2OCwiZXhwIjoxNjc2MzkwNTY4fQ.psQltWPNnKtGUgF3-q7jXFVSPyMHLqmpE7NqIUDFPs8","map":{"version":3,"names":["createStore","store","state","workouts","user","localStorage","getItem","error","isError","todos","updates","isComplete","showinp","newtodo","mutations","todo","JSON","parse","e","removeItem","addtodo","currectTodo","push","setItem","stringify","updatetodo","x","tasks","console","log","parsed","removetodo","splice","actions","context","commit"],"sources":["/home/amirrezatahmasebi/Documents/node-js/front-end/store/store.js"],"sourcesContent":["import { createStore } from 'vuex'\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n            workouts: null,\n            user: localStorage.getItem('user'),\n            error: null,\n            isError: false,\n            todos: [],\n            updates: null,\n            isComplete: false,\n            showinp: false,\n            newtodo: null\n        }\n    },\n    mutations: {\n        todo(state) {\n            if (localStorage.getItem('todo')) {\n                try {\n                    state.todos = JSON.parse(localStorage.getItem('todo'));\n                } catch (e) {\n                    localStorage.removeItem('todo');\n                }\n            }\n        },\n        addtodo(state) {\n            // ensure they actually typed something\n            if (!state.newtodo) {\n                return;\n            }\n            const todos = !localStorage.getItem('todo')\n                ? []\n                : JSON.parse(localStorage.getItem('todo'))\n\n            const currectTodo = {\n                todo: state.newtodo,\n                isComplete: state.isComplete\n            }\n\n            todos.push(currectTodo)\n            localStorage.setItem(\"todo\", JSON.stringify(todos))\n            if (localStorage.getItem('todo')) {\n                try {\n                    state.todos = JSON.parse(localStorage.getItem('todo'));\n                } catch (e) {\n                    localStorage.removeItem('todo');\n                }\n            }\n            state.newtodo = ''\n        },\n        updatetodo(state, x) {\n            if (!state.newtodo) {\n                return state.showinp = !state.showinp\n            }\n            let tasks = JSON.parse(localStorage.getItem(\"todo\"))\n            // tasks.forEach((task, n) => {\n                // if (task.todo == state.todos) {\n                // }\n                console.log(tasks);\n                const parsed = JSON.stringify(tasks);\n                localStorage.setItem('todo', parsed);\n            // })\n\n        },\n        removetodo(state, x) {\n            state.todos.splice(x, 1);\n            const parsed = JSON.stringify(state.todos);\n            localStorage.setItem('todo', parsed);\n        }\n    },\n    actions: {\n        todo(context) {\n            context.commit('todo')\n        },\n        addtodo(context) {\n            context.commit('addtodo')\n        },\n        removetodo(context) {\n            context.commit('removetodo')\n        },\n        updatetodo(context) {\n            context.commit('updatetodo')\n        }\n    }\n})\nexport default store;\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGRmMjljMTNjOTlhYmJkZmExNGZjMSIsImlhdCI6MTY3NjEzMTM2OCwiZXhwIjoxNjc2MzkwNTY4fQ.psQltWPNnKtGUgF3-q7jXFVSPyMHLqmpE7NqIUDFPs8"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}