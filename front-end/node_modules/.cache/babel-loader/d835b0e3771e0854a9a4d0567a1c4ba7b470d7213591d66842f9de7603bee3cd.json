{"ast":null,"code":"// import formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport { useStore } from 'vuex';\nimport workoutFormVue from './workoutForm.vue';\nexport default {\n  name: 'navVue',\n  components: {\n    workoutFormVue\n  },\n  data() {\n    const store = useStore();\n    if (localStorage.getItem('todo')) {\n      store.dispatch('todo');\n    }\n    // const showinp = false\n    // let timecreate = ref(formatDistanceToNow(new Date(store.state.date), { addSuffix: true }))\n    return {\n      store\n      // timecreate\n    };\n  },\n\n  // mounted() {\n\n  // },\n  methods: {\n    showinput: function () {\n      return this.store.state.showinp = !this.store.state.showinp;\n    },\n    middle: function () {\n      const list = document.getElementById(\"todo\");\n      for (var i = 0; i < list.length; ++i) {\n        list[i].classList.toggle('checked');\n      }\n    },\n    updatetodo: function (x) {\n      if (!this.store.state.newtodo) {\n        return this.store.state.showinp = !this.store.state.showinp;\n      }\n      if (this.store.state.newtodo) {\n        this.store.state.todos[x] = {\n          todo: this.store.state.newtodo,\n          isComplete: false\n        };\n        const parsed = JSON.stringify(this.store.state.todos);\n        localStorage.setItem('todo', parsed);\n        this.store.state.newtodo = '';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkBA;AACA,SAASA,QAAO,QAAS,MAAK;AAC9B,OAAOC,cAAa,MAAO,mBAAkB;AAC7C,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAI,GAAG;IACH,MAAMC,KAAI,GAAIL,QAAQ,EAAC;IACvB,IAAIM,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAC9BF,KAAK,CAACG,QAAQ,CAAC,MAAM;IACzB;IACA;IACA;IACA,OAAO;MACHH;MACA;IACJ;EACJ,CAAC;;EACD;;EAEA;EACAI,OAAO,EAAE;IACLC,SAAS,EAAE,YAAY;MACnB,OAAO,IAAI,CAACL,KAAK,CAACM,KAAK,CAACC,OAAM,GAAI,CAAC,IAAI,CAACP,KAAK,CAACM,KAAK,CAACC,OAAM;IAC9D,CAAC;IACDC,MAAM,EAAE,YAAY;MAChB,MAAMC,IAAG,GAAIC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;MAC5C,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAIH,IAAI,CAACI,MAAM,EAAE,EAAED,CAAC,EAAE;QAClCH,IAAI,CAACG,CAAC,CAAC,CAACE,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;MACvC;IACJ,CAAC;IACDC,UAAU,EAAE,UAAUC,CAAC,EAAE;MACrB,IAAI,CAAC,IAAI,CAACjB,KAAK,CAACM,KAAK,CAACY,OAAO,EAAE;QAC3B,OAAO,IAAI,CAAClB,KAAK,CAACM,KAAK,CAACC,OAAM,GAAI,CAAC,IAAI,CAACP,KAAK,CAACM,KAAK,CAACC,OAAM;MAC9D;MAAE,IAAI,IAAI,CAACP,KAAK,CAACM,KAAK,CAACY,OAAO,EAAE;QAC5B,IAAI,CAAClB,KAAK,CAACM,KAAK,CAACa,KAAK,CAACF,CAAC,IAAK;UAAEG,IAAI,EAAE,IAAI,CAACpB,KAAK,CAACM,KAAK,CAACY,OAAO;UAAEG,UAAU,EAAE;QAAM,CAAC;QAClF,MAAMC,MAAK,GAAIC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACxB,KAAK,CAACM,KAAK,CAACa,KAAK;QACpDlB,YAAY,CAACwB,OAAO,CAAC,MAAM,EAAEH,MAAM;QACnC,IAAI,CAACtB,KAAK,CAACM,KAAK,CAACY,OAAM,GAAI,EAAC;MAChC;IACJ;EACJ;AACJ","names":["useStore","workoutFormVue","name","components","data","store","localStorage","getItem","dispatch","methods","showinput","state","showinp","middle","list","document","getElementById","i","length","classList","toggle","updatetodo","x","newtodo","todos","todo","isComplete","parsed","JSON","stringify","setItem"],"sourceRoot":"","sources":["/home/amirrezatahmasebi/Documents/node-js/front-end/src/components/Home.vue"],"sourcesContent":["<template>\n    <div class=\"text-task\">\n        <h3>My Task:</h3>\n    </div>\n    <div class=\"between-flex\" v-for=\"(todo, n) in store.state.todos\">\n        <div class=\"flex\">\n            <input @click=\"middle\" id=\"myCheck\" type=\"checkbox\">\n            <p id=\"todo\">{{ todo.todo }}</p>\n        </div>\n        <div>\n            <button class=\"btn-del\" @click=\"store.dispatch('removetodo', n)\">Delete</button>\n            <button class=\"btn-upd\" @click=\"updatetodo(n)\">Update</button>\n        </div>\n    </div>\n    <input v-if=\"store.state.showinp\" ref=\"inp\" v-model=\"store.state.updates\" type=\"text\" />\n</template>\n\n<script>\n// import formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport { useStore } from 'vuex'\nimport workoutFormVue from './workoutForm.vue'\nexport default {\n    name: 'navVue',\n    components: {\n        workoutFormVue\n    },\n    data() {\n        const store = useStore()\n        if (localStorage.getItem('todo')) {\n            store.dispatch('todo')\n        }\n        // const showinp = false\n        // let timecreate = ref(formatDistanceToNow(new Date(store.state.date), { addSuffix: true }))\n        return {\n            store,\n            // timecreate\n        }\n    },\n    // mounted() {\n\n    // },\n    methods: {\n        showinput: function () {\n            return this.store.state.showinp = !this.store.state.showinp\n        },\n        middle: function () {\n            const list = document.getElementById(\"todo\");\n            for (var i = 0; i < list.length; ++i) {\n                list[i].classList.toggle('checked');\n            }\n        },\n        updatetodo: function (x) {\n            if (!this.store.state.newtodo) {\n                return this.store.state.showinp = !this.store.state.showinp\n            } if (this.store.state.newtodo) {\n                this.store.state.todos[x] = ({ todo: this.store.state.newtodo, isComplete: false })\n                const parsed = JSON.stringify(this.store.state.todos)\n                localStorage.setItem('todo', parsed)\n                this.store.state.newtodo = ''\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n@import url('../Style/style.css');\n\n.flex {\n    display: flex;\n}\n\nspan {\n    font-size: 11px;\n    color: black;\n}\n\ninput[type=checkbox]:checked+p {\n    text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}