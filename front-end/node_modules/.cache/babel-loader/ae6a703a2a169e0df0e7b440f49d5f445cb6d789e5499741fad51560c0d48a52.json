{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      workouts: null,\n      email: null,\n      password: null,\n      result: null,\n      results: false,\n      error: null,\n      isError: false,\n      delresult: false,\n      user: null\n    };\n  },\n  mutations: {\n    async getData(state) {\n      if (!state.user) {\n        return;\n      }\n      const response = await fetch('http://localhost:3000/books', {\n        headers: {\n          'Authorization': `Bearer ${state.user}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        state.workouts = json;\n      }\n    },\n    async useSignup(state) {\n      const response = await fetch('http://localhost:3000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: {\n          email,\n          password\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        setIsLoading(false);\n        setError(json.error);\n      }\n      if (response.ok) {\n        // save the user to local storage\n        localStorage.setItem('user', JSON.stringify(json));\n\n        // update the auth context\n        dispatch({\n          type: 'LOGIN',\n          payload: json\n        });\n\n        // update loading state\n        setIsLoading(false);\n      }\n    },\n    useLogin(state) {\n      axios.post('http://localhost:3000/login', {\n        email: state.email,\n        password: state.password\n      }).then(res => {\n        state.isError = false;\n        state.delresult = true;\n        localStorage.setItem('user', JSON.stringify(res));\n        // JSON.parse(localStorage.getItem('user'))\n        state.results = true;\n      }).catch(err => {\n        state.isError = true;\n        state.results = false;\n        store.state.delresult = false;\n        state.error = err.response.data.msg;\n        console.log(err.response.data.msg);\n      });\n    }\n  },\n  actions: {\n    getData(context) {\n      context.commit('getData');\n    },\n    useSignup(context) {\n      context.commit('useSignup');\n    },\n    useLogin(context) {\n      context.commit('useLogin');\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","workouts","email","password","result","results","error","isError","delresult","user","mutations","getData","response","fetch","headers","json","ok","useSignup","method","body","setIsLoading","setError","localStorage","setItem","JSON","stringify","dispatch","type","payload","useLogin","post","then","res","catch","err","data","msg","console","log","actions","context","commit"],"sources":["/home/amirrezatahmasebi/Documents/node-js/front-end/store/store.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n            workouts: null,\n            email: null,\n            password: null,\n            result: null,\n            results: false,\n            error: null,\n            isError: false,\n            delresult: false,\n            user: null\n        }\n    },\n    mutations: {\n        async getData(state) {\n            if (!state.user) {\n                return\n            }\n            const response = await fetch('http://localhost:3000/books', {\n                headers: { 'Authorization': `Bearer ${state.user}` },\n            })\n            const json = await response.json()\n\n            if (response.ok) {\n                state.workouts = json\n            }\n        },\n        async useSignup(state) {\n            const response = await fetch('http://localhost:3000/signup', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: { email, password }\n            })\n            const json = await response.json()\n\n            if (!response.ok) {\n                setIsLoading(false)\n                setError(json.error)\n            }\n            if (response.ok) {\n                // save the user to local storage\n                localStorage.setItem('user', JSON.stringify(json))\n\n                // update the auth context\n                dispatch({ type: 'LOGIN', payload: json })\n\n                // update loading state\n                setIsLoading(false)\n            }\n        },\n        useLogin(state) {\n            axios.post('http://localhost:3000/login', {\n                email: state.email,\n                password: state.password\n            })\n                .then((res) => {\n                    state.isError = false\n                    state.delresult = true\n                    localStorage.setItem('user', JSON.stringify(res))\n                    // JSON.parse(localStorage.getItem('user'))\n                    state.results = true\n                })\n                .catch((err) => {\n                    state.isError = true\n                    state.results = false\n                    store.state.delresult = false\n                    state.error = err.response.data.msg\n                    console.log(err.response.data.msg)\n                })\n        }\n    },\n    actions: {\n        getData(context) {\n            context.commit('getData')\n        },\n        useSignup(context) {\n            context.commit('useSignup')\n        },\n        useLogin(context) {\n            context.commit('useLogin')\n        }\n    }\n})\nexport default store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}