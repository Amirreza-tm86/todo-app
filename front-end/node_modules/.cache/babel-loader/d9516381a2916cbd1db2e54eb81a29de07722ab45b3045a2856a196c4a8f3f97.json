{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dc7cce2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-task\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"My Task:\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"between-flex\"\n};\nconst _hoisted_3 = {\n  class: \"flex\"\n};\nconst _hoisted_4 = {\n  id: \"todo\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.localStorage.getItem('todo'), items => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"input\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.middle && $options.middle(...args)),\n      id: \"myCheck\",\n      type: \"checkbox\"\n    }), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(items), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn-del\",\n      onClick: $event => $options.handlerDelete(items._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      class: \"btn-upd\",\n      onClick: $event => ($options.handlerUpdate(items._id), $options.showinput)\n    }, \"Update\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 256 /* UNKEYED_FRAGMENT */)), $data.showinp ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    ref: \"inp\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updates = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.updates]]) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEACIA,oBAEM;EAFDC,KAAK,EAAC;AAAW,iBAClBD,oBAAiB,YAAb,UAAQ;;EAEXC,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAM;;EAEVC,EAAE,EAAC;AAAM;;;;6DANpBC,UAEM,qBACNC,oBASMC,6BAToCC,iBAAY,CAACC,OAAO,UAA7BC,KAAK;yBAAtCJ,oBASM,OATNK,UASM,GARFT,oBAGM,OAHNU,UAGM,GAFFV,oBAAoD;MAA5CW,OAAK,yCAAEC,2CAAM;MAAEV,EAAE,EAAC,SAAS;MAACW,IAAI,EAAC;QACzCb,oBAA4B,KAA5Bc,UAA4B,mBAAZN,KAAK,oBAEzBR,oBAGM,cAFFA,oBAAyE;MAAjEC,KAAK,EAAC,SAAS;MAAEU,OAAK,YAAEC,sBAAa,CAACJ,KAAK,CAACO,GAAG;OAAG,QAAM,8BAChEf,oBAAoF;MAA5EC,KAAK,EAAC,SAAS;MAAEU,OAAK,aAAEC,sBAAa,CAACJ,KAAK,CAACO,GAAG,GAAGH,kBAAS;OAAE,QAAM;oCAGtEI,aAAO,kCAApBZ,oBAAgE;;IAA1Ca,GAAG,EAAC,KAAK;+DAAUD,aAAO;IAAEH,IAAI,EAAC;kDAAdG,aAAO","names":["_createElementVNode","class","id","_hoisted_1","_createElementBlock","_Fragment","_ctx","getItem","items","_hoisted_2","_hoisted_3","onClick","$options","type","_hoisted_4","_id","$data","ref"],"sourceRoot":"","sources":["/home/amirrezatahmasebi/Documents/node-js/front-end/src/components/Home.vue"],"sourcesContent":["<template>\n    <div class=\"text-task\">\n        <h3>My Task:</h3>\n    </div>\n    <div class=\"between-flex\" v-for=\"items in localStorage.getItem('todo')\">\n        <div class=\"flex\">\n            <input @click=\"middle\" id=\"myCheck\" type=\"checkbox\">\n            <p id=\"todo\">{{ items }}</p>\n        </div>\n        <div>\n            <button class=\"btn-del\" @click=\"handlerDelete(items._id)\">Delete</button>\n            <button class=\"btn-upd\" @click=\"handlerUpdate(items._id), showinput\">Update</button>\n        </div>\n    </div>\n    <input v-if=\"showinp\" ref=\"inp\" v-model=\"updates\" type=\"text\" />\n</template>\n\n<script>\n// import formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport axios from 'axios'\nimport { useStore } from 'vuex'\nimport workoutFormVue from './workoutForm.vue'\nexport default {\n    name: 'navVue',\n    components: {\n        workoutFormVue\n    },\n    data() {\n        const store = useStore()\n        const showinp = false\n        const updates = null\n        // let timecreate = ref(formatDistanceToNow(new Date(store.state.date), { addSuffix: true }))\n        if (localStorage.getItem('user')) {\n            axios.get('/books', {\n                headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` },\n            })\n                .then(response => {\n                    this.store.state.workouts = response.data\n                    localStorage.setItem('todo', JSON.stringify(response.data))\n                })\n        }\n        return {\n            store,\n            showinp,\n            updates\n            // timecreate\n        }\n    },\n    methods: {\n        handlerDelete: function (id) {\n            if (localStorage.getItem('user')) {\n\n                axios.delete(`/books/${id}`, {\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` },\n                })\n                    .then((res) => {\n                        axios.get('/books', {\n                            headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` },\n                        })\n                            .then(response => {\n                                this.store.state.workouts = response.data\n                            })\n                    })\n                    .catch((err) => console.log(err))\n            }\n        },\n        handlerUpdate: function (id) {\n            this.showinp = !this.showinp\n            if (localStorage.getItem('user')) {\n\n                if (this.updates !== null) {\n                    axios.patch(`/books/${id}`, {\n                        Todo: this.updates,\n                        headers: { 'Authorization': `Bearer ${this.store.state.result}` },\n\n                    })\n                        .then((res) => {\n                            axios.get('/books')\n                                .then(response => {\n                                    this.store.state.workouts = response.data\n                                })\n                            this.showinp = false\n                            this.updates = null\n                        })\n                        .catch((err) => console.log(err));\n                }\n            }\n        },\n        showinput: function () {\n            return this.showinp = !this.showinp\n        },\n        middle: function () {\n            const list = document.getElementById(\"todo\");\n            for (var i = 0; i < list.length; ++i) {\n                list[i].classList.toggle('checked');\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n@import url('../Style/style.css');\n\n.flex {\n    display: flex;\n}\n\nspan {\n    font-size: 11px;\n    color: black;\n}\n\ninput[type=checkbox]:checked+p {\n    text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}